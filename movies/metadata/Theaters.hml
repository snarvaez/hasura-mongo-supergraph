---
kind: ObjectType
version: v1
definition:
  name: TheatersLocationAddress
  fields:
    - name: city
      type: String
    - name: state
      type: String
    - name: street1
      type: String
    - name: street2
      type: String
    - name: zipcode
      type: String
  graphql:
    typeName: TheatersLocationAddress
    inputTypeName: TheatersLocationAddressInput
  dataConnectorTypeMapping:
    - dataConnectorName: mongo_movies
      dataConnectorObjectType: theaters_location_address

---
kind: TypePermissions
version: v1
definition:
  typeName: TheatersLocationAddress
  permissions:
    - role: admin
      output:
        allowedFields:
          - city
          - state
          - street1
          - street2
          - zipcode

---
kind: ObjectType
version: v1
definition:
  name: TheatersLocationGeo
  fields:
    - name: coordinates
      type: "[Double!]"
    - name: type
      type: String
  graphql:
    typeName: TheatersLocationGeo
    inputTypeName: TheatersLocationGeoInput
  dataConnectorTypeMapping:
    - dataConnectorName: mongo_movies
      dataConnectorObjectType: theaters_location_geo

---
kind: TypePermissions
version: v1
definition:
  typeName: TheatersLocationGeo
  permissions:
    - role: admin
      output:
        allowedFields:
          - coordinates
          - type

---
kind: ObjectType
version: v1
definition:
  name: TheatersLocation
  fields:
    - name: address
      type: TheatersLocationAddress
    - name: geo
      type: TheatersLocationGeo
  graphql:
    typeName: TheatersLocation
    inputTypeName: TheatersLocationInput
  dataConnectorTypeMapping:
    - dataConnectorName: mongo_movies
      dataConnectorObjectType: theaters_location

---
kind: TypePermissions
version: v1
definition:
  typeName: TheatersLocation
  permissions:
    - role: admin
      output:
        allowedFields:
          - address
          - geo

---
kind: ObjectType
version: v1
definition:
  name: Theaters
  fields:
    - name: id
      type: ObjectId!
    - name: location
      type: TheatersLocation
    - name: theaterId
      type: Int
    - name: zipcode
      type: String
  graphql:
    typeName: Theaters
    inputTypeName: TheatersInput
  dataConnectorTypeMapping:
    - dataConnectorName: mongo_movies
      dataConnectorObjectType: theaters
      fieldMapping:
        id:
          column:
            name: _id
        location:
          column:
            name: location
        theaterId:
          column:
            name: theaterId
        zipcode:
          column:
            name: zipcode

---
kind: TypePermissions
version: v1
definition:
  typeName: Theaters
  permissions:
    - role: admin
      output:
        allowedFields:
          - id
          - location
          - theaterId
          - zipcode

---
kind: BooleanExpressionType
version: v1
definition:
  name: TheatersLocationAddressBoolExp
  operand:
    object:
      type: TheatersLocationAddress
      comparableFields:
        - fieldName: city
          booleanExpressionType: StringBoolExp
        - fieldName: state
          booleanExpressionType: StringBoolExp
        - fieldName: street1
          booleanExpressionType: StringBoolExp
        - fieldName: street2
          booleanExpressionType: StringBoolExp
        - fieldName: zipcode
          booleanExpressionType: StringBoolExp
      comparableRelationships: []
  logicalOperators:
    enable: true
  isNull:
    enable: true
  graphql:
    typeName: TheatersLocationAddressBoolExp

---
kind: BooleanExpressionType
version: v1
definition:
  name: TheatersLocationGeoBoolExp
  operand:
    object:
      type: TheatersLocationGeo
      comparableFields:
        - fieldName: type
          booleanExpressionType: StringBoolExp
      comparableRelationships: []
  logicalOperators:
    enable: true
  isNull:
    enable: true
  graphql:
    typeName: TheatersLocationGeoBoolExp

---
kind: BooleanExpressionType
version: v1
definition:
  name: TheatersLocationBoolExp
  operand:
    object:
      type: TheatersLocation
      comparableFields:
        - fieldName: address
          booleanExpressionType: TheatersLocationAddressBoolExp
        - fieldName: geo
          booleanExpressionType: TheatersLocationGeoBoolExp
      comparableRelationships: []
  logicalOperators:
    enable: true
  isNull:
    enable: true
  graphql:
    typeName: TheatersLocationBoolExp

---
kind: BooleanExpressionType
version: v1
definition:
  name: TheatersBoolExp
  operand:
    object:
      type: Theaters
      comparableFields:
        - fieldName: id
          booleanExpressionType: ObjectIdBoolExp
        - fieldName: location
          booleanExpressionType: TheatersLocationBoolExp
        - fieldName: theaterId
          booleanExpressionType: IntBoolExp
        - fieldName: zipcode
          booleanExpressionType: StringBoolExp
      comparableRelationships: []
  logicalOperators:
    enable: true
  isNull:
    enable: true
  graphql:
    typeName: TheatersBoolExp

---
kind: AggregateExpression
version: v1
definition:
  name: TheatersAggExp
  operand:
    object:
      aggregatedType: Theaters
      aggregatableFields:
        - fieldName: id
          aggregateExpression: ObjectIdAggExp
        - fieldName: theaterId
          aggregateExpression: IntAggExp
        - fieldName: zipcode
          aggregateExpression: StringAggExp
  count:
    enable: true
  graphql:
    selectTypeName: TheatersAggExp

---
kind: OrderByExpression
version: v1
definition:
  name: TheatersLocationAddressOrderByExp
  operand:
    object:
      orderedType: TheatersLocationAddress
      orderableFields:
        - fieldName: city
          orderByExpression: StringOrderByExp
        - fieldName: state
          orderByExpression: StringOrderByExp
        - fieldName: street1
          orderByExpression: StringOrderByExp
        - fieldName: street2
          orderByExpression: StringOrderByExp
        - fieldName: zipcode
          orderByExpression: StringOrderByExp
      orderableRelationships: []
  graphql:
    expressionTypeName: TheatersLocationAddressOrderByExp

---
kind: OrderByExpression
version: v1
definition:
  name: TheatersLocationGeoOrderByExp
  operand:
    object:
      orderedType: TheatersLocationGeo
      orderableFields:
        - fieldName: type
          orderByExpression: StringOrderByExp
      orderableRelationships: []
  graphql:
    expressionTypeName: TheatersLocationGeoOrderByExp

---
kind: OrderByExpression
version: v1
definition:
  name: TheatersLocationOrderByExp
  operand:
    object:
      orderedType: TheatersLocation
      orderableFields:
        - fieldName: address
          orderByExpression: TheatersLocationAddressOrderByExp
        - fieldName: geo
          orderByExpression: TheatersLocationGeoOrderByExp
      orderableRelationships: []
  graphql:
    expressionTypeName: TheatersLocationOrderByExp

---
kind: OrderByExpression
version: v1
definition:
  name: TheatersOrderByExp
  operand:
    object:
      orderedType: Theaters
      orderableFields:
        - fieldName: id
          orderByExpression: ObjectIdOrderByExp
        - fieldName: location
          orderByExpression: TheatersLocationOrderByExp
        - fieldName: theaterId
          orderByExpression: IntOrderByExp
        - fieldName: zipcode
          orderByExpression: StringOrderByExp
      orderableRelationships: []
  graphql:
    expressionTypeName: TheatersOrderByExp

---
kind: Model
version: v2
definition:
  name: Theaters
  objectType: Theaters
  source:
    dataConnectorName: mongo_movies
    collection: theaters
  filterExpressionType: TheatersBoolExp
  aggregateExpression: TheatersAggExp
  orderByExpression: TheatersOrderByExp
  graphql:
    selectMany:
      queryRootField: theaters
      subscription:
        rootField: theaters
    selectUniques:
      - queryRootField: theatersById
        uniqueIdentifier:
          - id
        subscription:
          rootField: theatersById
    filterInputTypeName: TheatersFilterInput
    aggregate:
      queryRootField: theatersAggregate
      subscription:
        rootField: theatersAggregate

---
kind: ModelPermissions
version: v1
definition:
  modelName: Theaters
  permissions:
    - role: admin
      select:
        filter: null
        allowSubscriptions: true

---
kind: Relationship
version: v1
definition:
  name: restaurant_zipcode
  sourceType: Theaters
  target:
    model:
      subgraph: restaurants
      name: Restaurants
      relationshipType: Array
  mapping:
    - source:
        fieldPath:
          - fieldName: zipcode
      target:
        modelField:
          - fieldName: zipcode